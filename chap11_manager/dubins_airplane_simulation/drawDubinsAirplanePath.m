function r = drawDubinsAirplanePath(dubinspath)

    % set up plot window
    figure(2), clf
    
    % step size for plot
    step = 0.01;

    switch(dubinspath.case),
        case 1, % spiral - line - spiral
            r1 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_s,...
                            dubinspath.psi_s,...
                            dubinspath.lam_s,...
                            dubinspath.k_s,...
                            dubinspath.w_s,...
                            dubinspath.q_s,...
                            step);
            r2 = drawline(dubinspath.w_s,...
                          dubinspath.q_s,...
                          dubinspath.w_l,...
                          dubinspath.q_l,...
                          step);
            r3 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_e,...
                            dubinspath.psi_e,...
                            dubinspath.lam_e,...
                            dubinspath.k_e,...
                            dubinspath.w_e,...
                            dubinspath.q_e,...
                            step);
            path = [r1];
            plot3(r1(2,:),r1(1,:),-r1(3,:),'b');
            hold on
            plot3(r2(2,:),r2(1,:),-r2(3,:),'g');
            plot3(r3(2,:),r3(1,:),-r3(3,:),'k');
            xlabel('East'), ylabel('North')
            grid on
            axis('equal')
            r = [r1, r2, r3];

        case 2, % spiral - spiral - line -spiral
            r1 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_s,...
                            dubinspath.psi_s,...
                            dubinspath.lam_s,...
                            dubinspath.k_s,...
                            dubinspath.w_s,...
                            dubinspath.q_s,...
                            step);
            r2 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_si,...
                            dubinspath.psi_si,...
                            dubinspath.lam_si,...
                            dubinspath.k_si,...
                            dubinspath.w_si,...
                            dubinspath.q_si,...
                            step);
            r3 = drawline(dubinspath.w_si,...
                          dubinspath.q_si,...
                          dubinspath.w_l,...
                          dubinspath.q_l,...
                          step);
            r4 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_e,...
                            dubinspath.psi_e,...
                            dubinspath.lam_e,...
                            dubinspath.k_e,...
                            dubinspath.w_e,...
                            dubinspath.q_e,...
                            step);
            path = [r1];
            plot3(r1(2,:),r1(1,:),-r1(3,:),'b');
            hold on
            plot3(r2(2,:),r2(1,:),-r2(3,:),'g');
            plot3(r3(2,:),r3(1,:),-r3(3,:),'r');
            plot3(r4(2,:),r4(1,:),-r4(3,:),'k');
            xlabel('East'), ylabel('North')
            grid on
            axis('equal')
            r = [r1, r2, r3, r4];

        case 3, % spiral - line - spiral - spiral
            r1 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_s,...
                            dubinspath.psi_s,...
                            dubinspath.lam_s,...
                            dubinspath.k_s,...
                            dubinspath.w_s,...
                            dubinspath.q_s,...
                            step);
            r2 = drawline(dubinspath.w_s,...
                          dubinspath.q_s,...
                          dubinspath.w_l,...
                          dubinspath.q_l,...
                          step);
            r3 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_ei,...
                            dubinspath.psi_ei,...
                            dubinspath.lam_ei,...
                            dubinspath.k_ei,...
                            dubinspath.w_ei,...
                            dubinspath.q_ei,...
                            step);
            r4 = drawspiral(dubinspath.R,...
                            dubinspath.gam,...
                            dubinspath.c_e,...
                            dubinspath.psi_e,...
                            dubinspath.lam_e,...
                            dubinspath.k_e,...
                            dubinspath.w_e,...
                            dubinspath.q_e,...
                            step);
            path = [r1];
            plot3(r1(2,:),r1(1,:),-r1(3,:),'b');
            hold on
            plot3(r2(2,:),r2(1,:),-r2(3,:),'g');
            plot3(r3(2,:),r3(1,:),-r3(3,:),'r');
            plot3(r4(2,:),r4(1,:),-r4(3,:),'k');
            xlabel('East'), ylabel('North')
            grid on
            axis('equal')
            r = [r1, r2, r3, r4];

    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function r = drawspiral(R,gam,c,psi,lam,k,w,q,step)
    r = c + R*[ cos(psi); sin(psi); 0];
    % determine number of required crossings of half plane
    halfplane = (r(1:2,end)-w(1:2))'*q(1:2);
    if halfplane > 0, 
        required_crossing = 2*k+2;
    else
        required_crossing = 2*k+1;
    end
    % propagate spiral until cross half plane the right number of times
    s = 0;
    while (required_crossing>0) || (halfplane<=0),
        s = s+step;
        r = [r, c + R*[ cos(lam*s+psi); sin(lam*s+psi); -s*tan(gam)]];
        if sign(halfplane)~=sign((r(1:2,end)-w(1:2))'*q(1:2)),
            halfplane = (r(1:2,end)-w(1:2))'*q(1:2);
            required_crossing = required_crossing-1;
        end
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function r = drawline(w1,q1,w2,q2,step)
    r = w1;
    % propagate line until cross half plane
    s = 0;
    while ((r(:,end)-w2)'*q2<=0),
        s = s+step;
        r = [r, w1+s*q1];
    end
end




